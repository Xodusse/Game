<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI variables
// © 2017 - Jon Harvey

AItargetx = 0;
AItargety = 0;
AItargetspeedx = 0;
AItargetspeedy = 0;

AIsight = 512;
AIeye = 12;

AIfocus = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy variables
// © 2017 - Jon Harvey

WalkDirection = 0;

WalkSpeed = 1;
WalkSpeedX = 0;
WalkSpeedY = 0;

Radius = 16;

Health = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quick respawn

var A = random(360);
instance_create(obj_player.x+dcos(A)*1000,obj_player.y+dsin(A)*1000,obj_enemy);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI control
// © 2017 - Jon Harvey

AItargetspeedx *= S98;
AItargetspeedy *= S98;
AItargetx += FRAME_DELTA*AItargetspeedx;
AItargety += FRAME_DELTA*AItargetspeedy;

var Visible = point_distance(obj_player.x,obj_player.y,x+dcos(WalkDirection)*AIsight,y-dsin(WalkDirection)*AIsight)&lt;AIsight;
Visible *= (collision_line(obj_player.x,obj_player.y,x+dsin(WalkDirection)*AIeye,y+dcos(WalkDirection)*AIeye,obj_obstacle,1,1) == noone) ||
           (collision_line(obj_player.x,obj_player.y,x-dsin(WalkDirection)*AIeye,y-dcos(WalkDirection)*AIeye,obj_obstacle,1,1) == noone);

if Visible
{
    AIfocus = AIfocus*S90+(1-S90);
    WalkSpeed = WalkSpeed*S90+(1-S90);
    AItargetspeedx = obj_player.WalkSpeedX;
    AItargetspeedy = obj_player.WalkSpeedY;
    AItargetx = obj_player.x;
    AItargety = obj_player.y;
}

WalkDirection += FRAME_DELTA*0.1*AIfocus*angle_difference(point_direction(x,y,AItargetx,AItargety),WalkDirection);

if Health&lt;0.01
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy movement
// © 2017 - Jon Harvey

image_angle = WalkDirection;

var SumX,SumY;
SumX =  WalkSpeed*dcos(WalkDirection)*FRAME_DELTA;
SumY = -WalkSpeed*dsin(WalkDirection)*FRAME_DELTA;

for(var i = instance_number(obj_enemy);i&gt;=0;i--){

    var Inst = instance_find(obj_enemy,i);
    if Inst!=id{
    
        var Distance = point_distance(x+WalkSpeedX,y+WalkSpeedY,Inst.x+Inst.WalkSpeedX,Inst.y+Inst.WalkSpeedY);
        if (Distance&lt;Radius+Inst.Radius){
        
            var NormX = (x+WalkSpeedX-(Inst.x+Inst.WalkSpeedX))/Distance;
            var NormY = (y+WalkSpeedY-(Inst.y+Inst.WalkSpeedY))/Distance;
            SumX += NormX*(Radius+Inst.Radius-Distance);
            SumY += NormY*(Radius+Inst.Radius-Distance);
        }
    }
}

WalkSpeedX = WalkSpeedX*S90+(1-S90)*(SumX);
WalkSpeedY = WalkSpeedY*S90+(1-S90)*(SumY);

var Inst = instance_place(x+WalkSpeedX*10,y+WalkSpeedY*10,obj_obstacle);
if Inst != noone{

    WalkDirection += FRAME_DELTA*0.2*angle_difference(point_direction(Inst.x,Inst.y,x,y),WalkDirection);
}

x += WalkSpeedX;
y += WalkSpeedY;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw enemy
// © 2017 - Jon Harvey

draw_self();

if DEBUG_VISIBLE{

    draw_line(x+dsin(WalkDirection)*AIeye,y+dcos(WalkDirection)*AIeye,obj_player.x,obj_player.y);
    draw_line(x-dsin(WalkDirection)*AIeye,y-dcos(WalkDirection)*AIeye,obj_player.x,obj_player.y);
    
    draw_circle(x+dcos(WalkDirection)*AIsight,y-dsin(WalkDirection)*AIsight,AIsight,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
