<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory variables
// © 2017 - Jon Harvey

globalvar Idoubles,Isingles,Iammo,Ienable,Imove,I,Q;
Idoubles = 2;//Number of two-handed weapons.
Isingles = 2;//Number of one-handed weapons.
Iammo = Idoubles+Isingles;//Number of ammo (magazines or rounds).

//Toggle inventory (0 is off).
Ienable = 0;

//Inventory position of item being moved (-1 for no item).
Imove = -1;

//Item and quantity arrays (ordered from left to right, bottom to top).
I[11] = 0;
Q[11] = 0;

//Add default items (ids correspond to spr_items image index+1).
I[0] = 1;
Q[0] = 0;
I[1] = 2;
Q[1] = Gcap[0];
I[2] = 3;
Q[2] = 0;
I[3] = 4;
Q[3] = Gcap[1];
I[4] = 6;
Q[4] = Gcap[3];
I[5] = 5;
Q[5] = Gcap[2];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control inventory
// © 2017 - Jon Harvey

//Pop up on key press.
if Kinventory{
    
    Ienable = !Ienable;
}

//Inventory item movement
if Ienable{
    
    var W,H;
    W = view_wport[0];
    H = view_hport[0];
    
    var X,Y;
    X = floor((window_mouse_get_x()-W/2-240)/80);
    Y = 1-floor((window_mouse_get_y()-H/2)/80);
    
    if mouse_check_button_pressed(mb_left) &amp;&amp; (X&gt;=-6 &amp;&amp; X&lt;0) &amp;&amp; (Y&gt;0 &amp;&amp; Y&lt;=2){
        
        Imove = X+Y*6;
    }
    else
    if mouse_check_button_released(mb_left){
        
        var P = X+Y*6;
        if Imove != P &amp;&amp; (Imove&gt;=0 &amp;&amp; Imove&lt;12 ) &amp;&amp; (X&gt;=-6 &amp;&amp; X&lt;0) &amp;&amp; (Y&gt;0 &amp;&amp; Y&lt;=2){
        
            if I[Imove]&gt;Idoubles*2 &amp;&amp; I[P] == 0{ 
                
                I[P] = I[Imove];
                Q[P] = Q[Imove];
                I[Imove] = 0;
                Q[Imove] = 0;
            }
            else
            if I[Imove]&gt;0 &amp;&amp; I[P] == 0{ 
            
                var Shift = 2*(I[Imove]%2)-1;
                if (X+Shift&gt;=-6 &amp;&amp; X+Shift&lt;0) &amp;&amp; I[P+Shift] == 0{
            
                    I[P] = I[Imove];
                    Q[P] = Q[Imove];
                    I[P+Shift] = I[Imove+Shift];
                    Q[P+Shift] = Q[Imove+Shift];
                    
                    I[Imove] = 0;
                    Q[Imove] = 0;
                    I[Imove+Shift] = 0;
                    Q[Imove+Shift] = 0;
                }
            }
        }
        Imove = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
