<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_game_object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI variables
// © 2017 - Jon Harvey

//Variables for estimating player position.
AiTargetX = 0;
AiTargetY = 0;
AiTargetSpeedX = 0;
AiTargetSpeedY = 0;

//Enemy sight range (radius).
AiSight = 512;
//Enemy eye displacement.
AiEye = 8;

//Enemy focus variable.
AiFocus = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy variables
// © 2017 - Jon Harvey

WalkDirection = 0;

WalkSpeed = 1;
WalkSpeedX = 0;
WalkSpeedY = 0;

Radius = 16;

Health = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI control
// © 2017 - Jon HarveY

AiTargetSpeedX *= S98;
AiTargetSpeedY *= S98;
AiTargetX += FRAME_DELTA*AiTargetSpeedX;
AiTargetY += FRAME_DELTA*AiTargetSpeedY;


if instance_exists(obj_player){
    var Visible = (point_distance(obj_player.x,obj_player.y,x+dcos(WalkDirection)*AiSight,y-dsin(WalkDirection)*AiSight)&lt;AiSight) &amp;&amp;
    ((collision_line(obj_player.x,obj_player.y,x+dsin(WalkDirection)*AiEye,y+dcos(WalkDirection)*AiEye,obj_wall_parent,0,1) == noone) ||
    (collision_line(obj_player.x,obj_player.y,x-dsin(WalkDirection)*AiEye,y-dcos(WalkDirection)*AiEye,obj_wall_parent,0,1) == noone));
            
    if Visible{
        
        AiFocus = AiFocus*S90+(1-S90);
        WalkSpeed = WalkSpeed*S90+(1-S90);
        AiTargetSpeedX = obj_player.WalkSpeedX;
        AiTargetSpeedY = obj_player.WalkSpeedY;
        AiTargetX = obj_player.x;
        AiTargetY = obj_player.y;
    }
    else{
        
        AiFocus *= 1-(1-S90)*(point_distance(x,y,AiTargetX,AiTargetY)&lt;100);
    }

    WalkDirection += FRAME_DELTA*0.1*AiFocus*angle_difference(point_direction(x,y,AiTargetX,AiTargetY),WalkDirection);
    
    var Return = point_distance(x,y,AiTargetX,AiTargetY)/2000*angle_difference(point_direction(x,y,AiTargetX,AiTargetY),WalkDirection);
    WalkDirection += FRAME_DELTA*0.1*(1-AiFocus)*(random(60)-30+Return);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy movement
// © 2017 - Jon Harvey

image_angle = WalkDirection;

//Set initial speed.
var SumX,SumY;
SumX =  WalkSpeed*dcos(WalkDirection);
SumY = -WalkSpeed*dsin(WalkDirection);

//Get pushed by enemies.
for(var i = instance_number(obj_game_object);i&gt;=0;i--){

    var Inst = instance_find(obj_game_object,i);
    if Inst!=id{
    
        var Distance = point_distance(x+WalkSpeedX,y+WalkSpeedY,Inst.x+Inst.WalkSpeedX,Inst.y+Inst.WalkSpeedY);
        if (Distance&lt;Radius+Inst.Radius){
        
            var NormX = (x+WalkSpeedX-(Inst.x+Inst.WalkSpeedX))/Distance;
            var NormY = (y+WalkSpeedY-(Inst.y+Inst.WalkSpeedY))/Distance;
            SumX += NormX*(Radius+Inst.Radius-Distance);
            SumY += NormY*(Radius+Inst.Radius-Distance);
        }
    }
}

//Move smoothly and with delta timing.
WalkSpeedX = WalkSpeedX*S90+(1-S90)*(SumX);
WalkSpeedY = WalkSpeedY*S90+(1-S90)*(SumY);
x += WalkSpeedX*FRAME_DELTA;
y += WalkSpeedY*FRAME_DELTA;

//Collide with obstacle
var Inst = instance_place(x+WalkSpeedX*10,y+WalkSpeedY*10,obj_wall_parent);
if Inst != noone{

    WalkDirection += FRAME_DELTA*0.2*angle_difference(point_direction(Inst.x,Inst.y,x,y),WalkDirection);
}

//Check health.
if Health&lt;=0
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage player
// © 2017 - Jon Harvey
obj_player.Health -= random(.02)*FRAME_DELTA;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
