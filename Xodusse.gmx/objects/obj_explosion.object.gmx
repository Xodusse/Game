<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_explosion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Explosion variables
// © 2017 - Jon Harvey

SpeedX = 0;
SpeedY = 0;

Scale = 1;
Damage = 1;
Timer = 1/2;

audio_play_sound(snd_explosion,0,0);

Prx[40] = 0;
Pry[40] = 0;
Pra[40] = 0;
Prr[40] = 0;
Pax[40] = 0;
Pay[40] = 0;
Paa[40] = 0;
Par[40] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate with delta timing
// © 2017 - Jon Harvey

if (Timer==1/2){
    
    for(var p = 0;p&lt;40;p++){
        
        var Speed = power(random(1),8);
        Prx[p] = (random(4)-2)*Scale+SpeedX*Speed;
        Pry[p] = (random(4)-2)*Scale+SpeedY*Speed;
        Pra[p] = random(20)-10;
        Prr[p] = random(0.1);
        Pax[p] = random(8)-4;
        Pay[p] = random(8)-4;
        Paa[p] = random(360);
        Par[p] = Scale*2;
    }
    Shake = Shake*.9+3*sqr(Scale);
    with(obj_game_object){
    
        var Explosion = instance_nearest(x,y,obj_explosion);
        var Distance = distance_to_object(Explosion)/Explosion.Scale/32;
        if Distance&lt;1.5{
        
            Health -= min(1.5-Distance,1)*Explosion.Damage;
        }
        //Attract aliens
        if (object_index == obj_enemy) &amp;&amp; AiVigor&lt;min(3/Distance-.1,.9){
            
            AiTargetX = Explosion.x;
            AiTargetY = Explosion.y;
            AiTargetSpeedX = 0;
            AiTargetSpeedY = 0;
            AiTargetRadius = 400;
            AiFocus = 1;
            AiVigor = 1;
        }
    }
}

Timer -= DELTA;
if Timer&lt;=0{

    instance_destroy();
}

for(var p = 0;p&lt;40;p++){

    Prx[p] *= S90;
    Pry[p] *= S90;
    Pra[p] *= S90;
    Prr[p] *= S90;
    
    Pax[p] += Prx[p]*FRAME_DELTA;
    Pay[p] += Pry[p]*FRAME_DELTA;
    Paa[p] += Pra[p]*FRAME_DELTA;
    Par[p] += Prr[p]*FRAME_DELTA;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate explosion
// © 2017 - Jon Harvey

for(var p = 0;p&lt;40;p++){

    var Frame;
    Frame = clamp(Par[p]*2-.1,0,2);
    scr_lighting_draw_emissive(spr_explosion,spr_explosion_she,Frame,x+Pax[p],y+Pay[p],Par[p],Par[p],Paa[p],-1,(Timer-Par[p]*.1)*10);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
