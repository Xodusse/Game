<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//© 2017 - Reece Warren, All rights reserved.
//Console object.

text = "";

//Previous string input history.
string0 = "";
string1 = "";
string2 = "";
string3 = "";
string4 = "";
string5 = "";
string6 = "";
string7 = "";

enabled_keys = "ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789_,.:;'@#~/()[]+-";
cursor_blink = true;
blink_speed = 0.5;

xx = 0;
yy = 0;

CONSOLE_TRIGGER = false;
COMMAND_EXECUTED = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//© 2017 - Reece Warren, All rights reserved.
//Console cursor blink.

blink_speed -= (1/60) * FRAME_DELTA;

if (blink_speed &lt;= 0){

    blink_speed = 0.5;
    cursor_blink = !cursor_blink;    
}

if (Kconsole == true){
    CONSOLE_ENABLED = true;
}

if (Kescape == true){
    CONSOLE_ENABLED = false;
}

if (COMMAND_EXECUTED == true){
    text = "";
    COMMAND_EXECUTED = false;
    CONSOLE_ENABLED = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_Exudation_Large);
draw_set_colour(c_white);
draw_set_halign(fa_left);

if (CONSOLE_ENABLED == true){
    //draw the console window
    draw_text(16, ((view_hview[0])-150),  "/" + text);
    
    //draw the string history
    //draw_text(+32, ((view_hview[0])-180),  string0);
    draw_text(16, ((view_hview[0])-205),  string1);
    draw_text(16, ((view_hview[0])-230),  string2); 
    draw_text(16, ((view_hview[0])-255),  string3); 
    draw_text(16, ((view_hview[0])-280),  string4); 
    draw_text(16, ((view_hview[0])-305),  string5); 
    draw_text(16, ((view_hview[0])-330),  string6);
    
    //Change the colour of the help title if the command is used:
    if (string_pos("--- COMMAND LIST",string7) == true){
        draw_set_colour(c_orange);
        draw_text(16, ((view_hview[0])-355),  string7);
        draw_set_colour(c_white);
    }
    else {
        draw_text(16, ((view_hview[0])-355),  string7);
    }
    
    //Change the colour of the next page footer if the help command is used:
    if (string_pos("Type /help 2 to view next page...",string0) == true){
        draw_set_colour(c_olive);
        draw_text(16, ((view_hview[0])-180),  string0);
        draw_set_colour(c_white);
    }
    else {
        draw_text(+32, ((view_hview[0])-180),  string0);
    }     
    

    var length = string_width(text)+10;
    //var height = string_height(text);
    var box_height = 28;  
    
    if (cursor_blink == true){
        draw_text((16)+length,((view_hview[0])-150),"_");
        
    }
    draw_set_alpha(0.1);
    draw_rectangle(0, ((view_hview[0])-155),
    ((view_wview[0])-150), ((view_hview[0])-155)+ box_height, 
    false);
    draw_set_alpha(1);
}

draw_set_colour(c_black);
draw_set_font(-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (CONSOLE_ENABLED == true){

    //If the - key is pressed:
    if (keyboard_check_pressed(189)){    
        text += "-";      
    }
    
    else if (string_count(chr(keyboard_key), enabled_keys)) &amp;&amp; (string_length(chr(keyboard_key)) == 1){
        //Reset the cursor blinking:
        cursor_blink = true;
        Alarm[0] = blink_speed;
        
        switch(keyboard_key){
            
            case "#" : text += "\#"; break;
            
            default: text += string(keyboard_lastchar); break;
        }
               
    }   
    
    //If control isn't being held:
    if (!keyboard_check(vk_control)){
        switch(keyboard_key){
            case vk_backspace: text = string_copy(text, 0, string_length(text) - 1); break;
            
            case vk_enter:
                
                scr_command_help2();                
                
                scr_command_help();
                
                scr_command_tp();
                                
                scr_command_clear();
                
                scr_command_god();
                
                scr_command_killall();
                
                scr_command_alienmax();
                
                scr_command_wave();                                                                                
                
            break;
            
            default: break;
        }
    }
    
    //Otherwise, can paste:
    else{
        switch(keyboard_key){
            case ord("V"): text += clipboard_get_text(); break;
            default: break;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
