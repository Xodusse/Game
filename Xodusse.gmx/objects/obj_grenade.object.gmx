<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_grenade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grenade variables
// © 2017 - Jon Harvey

Hit = 1;
Radius = 8;
Z = 0;

SpeedA = 0;
SpeedX = 0;
SpeedY = 0;
SpeedZ = 0;

image_angle = irandom(360);

Timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move and explode
// © 2017 - Jon Harvey

if (Z&lt;=.1){

    //Hit ground.
    SpeedA *= random(0.4)+0.8;
    SpeedX *= random(0.4)+0.6;
    SpeedY *= random(0.4)+0.6;
    SpeedZ *= -0.5;
}
else{
    
    //Fall to ground.
    SpeedZ += -653*DELTA;
}

//Bounce
var Object = collision_line(x*2-xprevious,y*2-yprevious,xprevious,yprevious,obj_game_object,1,1);
if instance_exists(Object) &amp;&amp; (Object.object_index != obj_player) &amp;&amp; !Hit{
    
    var Normal,Direction,Length;
    Normal = point_direction(Object.x,Object.y,x,y);
    Direction = darctan2(-SpeedY,SpeedX);
    Direction += angle_difference(Normal,Direction);
    Length = sqrt(sqr(SpeedX)+sqr(SpeedY))*.8;
    SpeedX = dcos(Direction)*Length;
    SpeedY = dcos(Direction)*Length;
}

//Set initial speed.
var SumX,SumY;
SumX = SpeedX;
SumY = SpeedY;

//Get pushed by all objects.
for(var i = instance_number(obj_game_object);i&gt;=0;i--){

    var Inst = instance_find(obj_game_object,i);
    if (Inst!=noone) &amp;&amp; (Inst!=id){
        
        var Distance = point_distance(x+SpeedX,y+SpeedY,Inst.x+Inst.SpeedX,Inst.y+Inst.SpeedY);
        if (Distance&lt;Radius+Inst.Radius){
            
            var NormX = (x+SpeedX-(Inst.x+Inst.SpeedX))/Distance;
            var NormY = (y+SpeedY-(Inst.y+Inst.SpeedY))/Distance;
            SumX += NormX*(Radius+Inst.Radius-Distance);
            SumY += NormY*(Radius+Inst.Radius-Distance);
        }
        else{
            
            Hit *= (Inst.object_index != obj_player);
        }
    }
}

//Move smoothly and with delta timing.
SpeedX = SpeedX*S90+(1-S90)*(SumX);
SpeedY = SpeedY*S90+(1-S90)*(SumY);

//Update visuals.
image_angle += SpeedA*FRAME_DELTA;
image_xscale = 1+.001*Z;
image_yscale = 1+.001*Z;

//Control movement.
x += SpeedX*FRAME_DELTA;
y += SpeedY*FRAME_DELTA;
Z = max(Z+SpeedZ*FRAME_DELTA,0);


Timer += DELTA;
if (Timer&gt;2){

    var Explosion = instance_create(x,y,obj_explosion);
    Explosion.SpeedX = SpeedX;
    Explosion.SpeedY = SpeedY;  
    Explosion.Scale = 1;
    Explosion.Damage = 4;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move and explode
// © 2017 - Jon Harvey

scr_lighting_draw_sprite(spr_grenade,spr_grenade,spr_grenade,0,x,y,1,1,image_angle,image_blend,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
